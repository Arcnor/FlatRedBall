<UserControl x:Class="TopDownPlugin.Views.IndividualTopDownValuesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TopDownPlugin.Views"
             xmlns:wpfdataui="clr-namespace:WpfDataUi;assembly=WpfDataUiCore"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="600">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <Rectangle Grid.Row="0" Grid.Column ="1" Grid.ColumnSpan="3" VerticalAlignment="Stretch" Fill="LightGray" />

        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" HorizontalAlignment="Left" Width="1" Fill="Gray" />
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" HorizontalAlignment="Left" Width="1" Fill="Gray" />
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" HorizontalAlignment="Left" Width="1" Fill="Gray" />
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" HorizontalAlignment="Left" Width="1" Fill="Gray" />
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="4" HorizontalAlignment="Left" Width="1" Fill="Gray" />
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="4" HorizontalAlignment="Right" Width="1" Fill="Gray" />


        <Rectangle Grid.Row="0" Grid.ColumnSpan="5" VerticalAlignment="Top" Height="1" Fill="Black" />
        <Rectangle Grid.Row="0" Grid.Column ="1" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Height="1" Fill="Gray" />

        <Rectangle Grid.Row="1" Grid.ColumnSpan="5" Grid.Column="0" VerticalAlignment="Bottom" Height="1" Fill="Gray" />


        <!--Name-->
        <StackPanel Grid.Row="1" Margin="3">
            <TextBlock HorizontalAlignment="Center" Margin="3">Movement Type</TextBlock>
            <TextBox Text="{Binding Name}" Width="90" VerticalAlignment="Top" 
                     KeyUp="TextBox_KeyEnterUpdate" 
                     IsEnabled="{Binding IsNameEditable}">
                <TextBox.ToolTip>
                    The name of the movement type. This name can be used in code to assign this movement type.
                </TextBox.ToolTip>
            </TextBox>

            <GroupBox Header="Inheritance" Visibility="{Binding InheritBoxVisibility}">
                <StackPanel>
                    <RadioButton VerticalContentAlignment="Center" IsChecked="{Binding InheritMovementValues}">
                        <RadioButton.ToolTip>
                            If inherited, this entity will use this value as defined in the base entity.
                        </RadioButton.ToolTip>
                        Inherit Values
                    </RadioButton>
                    <RadioButton VerticalContentAlignment="Center" IsChecked="{Binding OverwriteMovementValues}">
                        <RadioButton.ToolTip>
                            If overwriting, this entity's values for these movement values will be used instead of the base entity.
                        </RadioButton.ToolTip>
                        Overwrite Values
                    </RadioButton>
                </StackPanel>
            </GroupBox>

        </StackPanel>


        <!--Horizontal Movement-->
        <TextBlock Grid.Column="1" FontSize="16" HorizontalAlignment="Left" Margin="3,3,8,3">Movement</TextBlock>
        <StackPanel Grid.Row="1" Grid.Column="1" Margin="12,3,8,3" IsEnabled="{Binding IsEditable}">

            <TextBlock>Max Speed:</TextBlock>
            <TextBox Text="{Binding MaxSpeed}" HorizontalAlignment="Left" Width="70" Margin="0,0,0,5"
                     KeyUp="TextBox_KeyEnterUpdate">
                <TextBox.ToolTip>
                    The maximum speed that this entity can move through input. It is possible to move faster if another force (such as collision) acts on this entity.
                </TextBox.ToolTip>
            </TextBox>

            <RadioButton IsChecked="{Binding IsImmediate}">
                <RadioButton.ToolTip>
                    If using Immediate movement, this entity will immediately speed up when the input device is held down, and will immediately stop when the input device is released.
                </RadioButton.ToolTip>
                Immediate
            </RadioButton>
            <RadioButton  IsChecked="{Binding UsesAcceleration}" Margin="0,0,0,5">
                <RadioButton.ToolTip>
                    If using Speed Up/Down, this entity will gradually accelerate to max speed when the input device is held down, and will gradually slow down when the input device is released.
                </RadioButton.ToolTip>
                Speed Up/Down
            </RadioButton>

            <StackPanel Visibility="{Binding AccelerationValuesVisibility}">
                <TextBlock>Speed Up Time:</TextBlock>
                <TextBox HorizontalAlignment="Left" Width="50"  Text="{Binding AccelerationTime}"
                         KeyUp="TextBox_KeyEnterUpdate">
                    <TextBox.ToolTip>
                        The number of seconds to accelerate (linearly) from a standstill to maximum speed.
                    </TextBox.ToolTip>
                </TextBox>
                <TextBlock>Slow Down Time:</TextBlock>
                <TextBox HorizontalAlignment="Left" Width="50" Text="{Binding DecelerationTime}"
                         KeyUp="TextBox_KeyEnterUpdate">
                    <TextBox.ToolTip>
                        The number of seconds to slow down (linearly) from max speed to a standstill.
                    </TextBox.ToolTip>
                </TextBox>
            </StackPanel>

            <CheckBox VerticalContentAlignment="Center" Margin="0,10,0,0" IsChecked="{Binding IsCustomDecelerationChecked}">
                <CheckBox.ToolTip>
                    Whether to use a custom deceleration value when moving above max speed. If false, then the Slow Down Time will be used to calculate a deceleration value. If true, a custom value will be used. This value shoudl be true for movement values with a Max Speed of 0.
                </CheckBox.ToolTip>
                Custom deceleration above max speed
            </CheckBox>
            <TextBox Width="70" HorizontalAlignment="Left" IsEnabled="{Binding IsCustomDecelerationValueEnabled}" Text="{Binding CustomDecelerationValue}">
                <TextBox.ToolTip>
                    The deceleration value to apply to the entity if it is moving above its max speed.
                </TextBox.ToolTip>
            </TextBox>
        </StackPanel>


        <!--Directions Movement-->
        <TextBlock Grid.Column="2" FontSize="16" HorizontalAlignment="Left" Margin="3,3,8,3">Directions</TextBlock>
        <StackPanel Grid.Row="1" Grid.Column="2" Margin="12,3,8,3" IsEnabled="{Binding IsEditable}">
            
            <TextBlock>Direction Updates:</TextBlock>
            <RadioButton IsChecked="{Binding UpdateDirectionFromVelocity}">
                <RadioButton.ToolTip>
                    The Direction property should update according to the unit's velocity.
                </RadioButton.ToolTip>
                Update to Velocity
            </RadioButton>
            <RadioButton IsChecked="{Binding UpdateDirectionFromInput}">
                <RadioButton.ToolTip>
                    The Direction property should update according to the direction held on the input device, regardless of velocity.
                </RadioButton.ToolTip>
                Update to Input
            </RadioButton>
            <RadioButton  IsChecked="{Binding DontChangeDirection}" Margin="0,0,0,5">
                <RadioButton.ToolTip>
                    The Direction property should not update in generated code, but can be set in custom code.
                </RadioButton.ToolTip>

                Don't Change Direction
            </RadioButton>
        </StackPanel>

        <TextBlock Grid.Column="3" FontSize="16" HorizontalAlignment="Left" Margin="3,3,8,3">Add'l Props </TextBlock>
        <wpfdataui:DataUiGrid x:Name="DataGrid" Grid.Row="1" Grid.Column="3"  IsEnabled="{Binding IsEditable}"></wpfdataui:DataUiGrid>

        <Button Grid.Column="4" Width="24" Click="HandleXClick" Visibility="{Binding DeleteButtonVisibility}" >X</Button>

    </Grid>
</UserControl>
