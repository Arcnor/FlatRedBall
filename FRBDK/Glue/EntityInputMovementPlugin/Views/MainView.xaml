<UserControl x:Class="EntityInputMovementPlugin.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EntityInputMovementPlugin.Views" 
             xmlns:TopDownViews="clr-namespace:TopDownPlugin.Views;assembly=TopDownPluginCore"
             xmlns:PlatformerViews="clr-namespace:FlatRedBall.PlatformerPlugin.Views;assembly=PlatformerPluginCore"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" >
            <GroupBox Header="Input Movement Type" IsEnabled="{Binding CanUserSelectMovementType}">
                <GroupBox.ToolTip>Setting the Input Movement Type enables standard movement using the keyboard, gamepad, or custom input.</GroupBox.ToolTip>
                <StackPanel>
                    <RadioButton IsChecked="{Binding IsNoneRadioChecked}">
                        <RadioButton.ToolTip>If None is checked, no movement code is generated.</RadioButton.ToolTip>
                        None
                    </RadioButton>
                    <RadioButton IsChecked="{Binding IsTopDownRadioChecked}">
                        <RadioButton.ToolTip>If Top-Down is checked, standard top-down movement code is generated for moving in four directions.</RadioButton.ToolTip>
                        Top-Down
                    </RadioButton>
                    <RadioButton IsChecked="{Binding IsPlatformerRadioChecked}">
                        <RadioButton.ToolTip>If Platformer is checked, standard platformer movement code is generated for moving horizontally and jumping.</RadioButton.ToolTip>
                        Platformer
                    </RadioButton>
                    <!--eventually...
                    <RadioButton>Racing</RadioButton>-->
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Input Device" Visibility="{Binding InputDeviceVisibility}">
                <GroupBox.ToolTip>Glue can generate standard input reading code. This can be overridden in code</GroupBox.ToolTip>
                <StackPanel>
                    <RadioButton IsChecked="{Binding IsGamepadWithKeyboardFallbackInputDevice}">
                        <RadioButton.ToolTip>Generates code to use a gamepad if plugged in, otherwise to use the Keyboard.</RadioButton.ToolTip>
                        Xbox Gamepad with Keyboard Fallback
                    </RadioButton>
                    <RadioButton IsChecked="{Binding IsZeroInputDevice}">
                        <RadioButton.ToolTip>Generates code assigning a "zero" input device.</RadioButton.ToolTip>
                        "Zero" InputDevice
                    </RadioButton>
                    <RadioButton IsChecked="{Binding IsNoneInputDevice}">
                        <RadioButton.ToolTip>Generates no input assignment code, which will cause exceptions if not assigned in code.</RadioButton.ToolTip>
                        None (Must Assign in Code)
                    </RadioButton>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <TopDownViews:MainEntityView Visibility="{Binding TopDownUiVisibility}" x:Name="TopDownView" Grid.Row="1"></TopDownViews:MainEntityView>
        <PlatformerViews:MainControl Visibility="{Binding PlatformerUiVisibility}" x:Name="PlatformerView" Grid.Row="1"></PlatformerViews:MainControl>
    </Grid>
</UserControl>
